version: '3.8'

services:
  app:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile
      target: production
    container_name: vosiz-app
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - app_storage:/var/www/html/storage
      - app_cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=vosiz_production
      - DB_USERNAME=vosiz_user
      - DB_PASSWORD=secure_password_123
      - MONGODB_DSN=mongodb://mongo:27017/vosiz_products
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
      - mongo
    networks:
      - vosiz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mysql:8.0
    container_name: vosiz-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: vosiz_production
      MYSQL_USER: vosiz_user
      MYSQL_PASSWORD: secure_password_123
      MYSQL_ROOT_PASSWORD: root_password_123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - vosiz-network
    command: --default-authentication-plugin=mysql_native_password

  mongo:
    image: mongo:6.0
    container_name: vosiz-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: mongo_password_123
      MONGO_INITDB_DATABASE: vosiz_products
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    networks:
      - vosiz-network

  redis:
    image: redis:7-alpine
    container_name: vosiz-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vosiz-network
    command: redis-server --appendonly yes

  nginx-proxy:
    image: nginx:alpine
    container_name: vosiz-proxy
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./nginx-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-proxy/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - vosiz-network

volumes:
  mysql_data:
    driver: local
  mongo_data:
    driver: local
  redis_data:
    driver: local
  app_storage:
    driver: local
  app_cache:
    driver: local

networks:
  vosiz-network:
    driver: bridge