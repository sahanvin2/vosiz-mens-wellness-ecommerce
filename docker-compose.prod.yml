version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: vosiz_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./public:/var/www/html/public
    depends_on:
      - app
    networks:
      - vosiz_network

  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: vosiz_app
    restart: unless-stopped
    volumes:
      - ./storage:/var/www/html/storage
      - ./public/storage:/var/www/html/public/storage
    depends_on:
      - mysql
      - mongodb
      - redis
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    networks:
      - vosiz_network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: vosiz_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: vosiz_db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: vosiz_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - vosiz_network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: vosiz_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: vosiz_mongo
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - vosiz_network

  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: vosiz_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - vosiz_network

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: vosiz_queue
    restart: unless-stopped
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    volumes:
      - ./storage:/var/www/html/storage
    depends_on:
      - mysql
      - redis
    networks:
      - vosiz_network

  # Scheduler
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: vosiz_scheduler
    restart: unless-stopped
    command: php artisan schedule:work
    volumes:
      - ./storage:/var/www/html/storage
    depends_on:
      - mysql
      - redis
    networks:
      - vosiz_network

networks:
  vosiz_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local